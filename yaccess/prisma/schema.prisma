generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL_DEV")
  shadowDatabaseUrl = env("DATABASE_URL_TEST")
}

model User {
  id          Int        @id @default(autoincrement())
  name    String?    @db.VarChar(255)
  email       String     @unique @db.VarChar(255)
  photo       Bytes?     @db.Blob
  password    String     @db.VarChar(255)
  phoneNumber String?    @db.VarChar(255)
  address     String?    @db.VarChar(255)
  badges      Badge[]
  passenger   Passenger? @relation(fields: [passengerId], references: [id])
  driver      Driver?
  car         Car?
  passengerId Int?
}

model Driver {
  licenseNumber String? @db.VarChar(255)

  carId Int @unique
  car   Car @relation(fields: [carId], references: [id])

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  trips Trip[]
}

model Car {
  id            Int     @id @default(autoincrement())
  licensePlate  String? @db.VarChar(255)
  brand         String? @db.VarChar(255)
  model         String? @db.VarChar(255)
  numberOfSeats Int?

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  driver Driver?
}

model Passenger {
  id      Int      @id @default(autoincrement())
  userId  Int
  comment String?  @db.Text
  rating  Decimal? @db.Decimal(3, 1)
  Trip    Trip[]
  User    User[]
}

model Badge {
  id          Int     @id @default(autoincrement())
  title       String? @db.VarChar(255)
  description String? @db.Text
  photo       Bytes?  @db.Blob

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int
}

model Trip {
  id                Int       @id @default(autoincrement())
  departureLocation String?   @db.VarChar(255)
  arrivalLocation   String?   @db.VarChar(255)
  appointmentDate   DateTime? @db.DateTime(0)
  distance          Decimal?  @db.Decimal(10, 2)
  fareAmount        Decimal?  @db.Decimal(10, 2)
  carbonEco         Decimal?  @db.Decimal(10, 2)
  isFinished        Boolean?
  isPaid            Boolean?
  comment           String?   @db.Text
  rating            Decimal?  @db.Decimal(3, 1)

  passengerId Int?
  passenger   Passenger? @relation(fields: [passengerId], references: [id])
  
  Driver      Driver?    @relation(fields: [driverCarId], references: [carId])
  driverCarId Int?
}
